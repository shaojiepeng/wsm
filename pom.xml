<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.wsm</groupId>
    <artifactId>wsm-base</artifactId>
    <version>1.0.0</version>
    <packaging>pom</packaging>

    <name>wsm-base</name>
    <description>wsm base project</description>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>1.5.12.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>

    <!-- 模块说明：这里声明多个子模块 -->
    <modules>
        <module>wsm-common</module>
        <module>wsm-common-web</module>
        <module>wsm-sso</module>
        <module>wsm-sso-server</module>
        <module>wsm-eureka</module>
        <module>wsm-admin-feign-consumer</module>
        <module>wsm-admin-web</module>
        <module>wsm-admin-service</module>
        <module>wsm-admin-dao</module>
        <module>wsm-operation-web</module>
        <module>wsm-operation-service</module>
        <module>wsm-operation-dao</module>
    </modules>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>1.8</java.version>

        <!-- 在properties中统一控制依赖包的版本，更清晰-->
        <nekohtml.version>1.9.22</nekohtml.version>
        <thymeleaf.shiro.version>1.0.2</thymeleaf.shiro.version>
        <spring.mybatis.version>1.3.2</spring.mybatis.version>
        <tk.mybatis.version>2.0.2</tk.mybatis.version>
        <mysql.version>5.1.46</mysql.version>
        <druid.version>1.0.15</druid.version>
        <kaptcha.version>2.3.2</kaptcha.version>
        <lombok.version>1.16.20</lombok.version>
        <commons-lang3.version>3.3.2</commons-lang3.version>
        <fastjson.version>1.2.15</fastjson.version>
        <shiro.version>1.2.4</shiro.version>
        <spring.boot.version>1.5.12.RELEASE</spring.boot.version>
        <redis.version>2.0.0.RELEASE</redis.version>
        <jackson.version>2.9.2</jackson.version>
        <httpclient.version>4.5.3</httpclient.version>
        <commons.codec.version>1.10</commons.codec.version>
        <javax.servlet-api.version>3.1.0</javax.servlet-api.version>
        <jedis.version>2.9.0</jedis.version>
        <eureka.version>1.4.0.RELEASE</eureka.version>
        <feign.version>1.4.0.RELEASE</feign.version>
        <spring-cloud.version>Dalston.SR3</spring-cloud.version>
        <swagger-annotations.version>1.5.13</swagger-annotations.version>
        <feign-httpclient.version>8.18.0</feign-httpclient.version>
        <feign-jackson.version>8.18.0</feign-jackson.version>
    </properties>

    <!--dependencyManagement用于管理依赖版本号-->
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>com.wsm</groupId>
                <artifactId>wsm-common</artifactId>
                <version>1.0.0</version>
            </dependency>
            <dependency>
                <groupId>com.wsm</groupId>
                <artifactId>wsm-common-web</artifactId>
                <version>1.0.0</version>
            </dependency>
            <dependency>
                <groupId>com.wsm</groupId>
                <artifactId>wsm-sso</artifactId>
                <version>1.0.0</version>
            </dependency>
            <dependency>
                <groupId>com.wsm</groupId>
                <artifactId>wsm-sso-server</artifactId>
                <version>1.0.0</version>
            </dependency>
            <dependency>
                <groupId>com.wsm</groupId>
                <artifactId>wsm-eureka</artifactId>
                <version>1.0.0</version>
            </dependency>
            <dependency>
                <groupId>com.wsm</groupId>
                <artifactId>wsm-admin-feign-consumer</artifactId>
                <version>1.0.0</version>
            </dependency>
            <dependency>
                <groupId>com.wsm</groupId>
                <artifactId>wsm-admin-web</artifactId>
                <version>1.0.0</version>
            </dependency>
            <dependency>
                <groupId>com.wsm</groupId>
                <artifactId>wsm-admin-service</artifactId>
                <version>1.0.0</version>
            </dependency>
            <dependency>
                <groupId>com.wsm</groupId>
                <artifactId>wsm-admin-dao</artifactId>
                <version>1.0.0</version>
            </dependency>
            <dependency>
                <groupId>com.wsm</groupId>
                <artifactId>wsm-operation-web</artifactId>
                <version>1.0.0</version>
            </dependency>
            <dependency>
                <groupId>com.wsm</groupId>
                <artifactId>wsm-operation-service</artifactId>
                <version>1.0.0</version>
            </dependency>
            <dependency>
                <groupId>com.wsm</groupId>
                <artifactId>wsm-operation-dao</artifactId>
                <version>1.0.0</version>
            </dependency>

            <!--spring boot -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-web</artifactId>
                <version>${spring.boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-test</artifactId>
                <version>${spring.boot.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot</artifactId>
                <version>${spring.boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-autoconfigure</artifactId>
                <version>${spring.boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-tomcat</artifactId>
                <version>${spring.boot.version}</version>
                <scope>provided</scope>
            </dependency>

            <!--thymeleaf -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-thymeleaf</artifactId>
                <version>${spring.boot.version}</version>
            </dependency>
            <dependency>
                <groupId>com.github.theborakompanioni</groupId>
                <artifactId>thymeleaf-extras-shiro</artifactId>
                <version>${thymeleaf.shiro.version}</version>
            </dependency>

            <!-- JPA -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-data-jpa</artifactId>
                <version>${spring.boot.version}</version>
            </dependency>

            <!-- mybatis -->
            <dependency>
                <groupId>org.mybatis.spring.boot</groupId>
                <artifactId>mybatis-spring-boot-starter</artifactId>
                <version>${spring.mybatis.version}</version>
            </dependency>
            <dependency>
                <groupId>tk.mybatis</groupId>
                <artifactId>mapper-spring-boot-starter</artifactId>
                <version>${tk.mybatis.version}</version>
            </dependency>

            <!-- mysql -->
            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>${mysql.version}</version>
                <scope>runtime</scope>
            </dependency>

            <!-- druid -->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid</artifactId>
                <version>${druid.version}</version>
            </dependency>

            <!-- shiro -->
            <dependency>
                <groupId>org.apache.shiro</groupId>
                <artifactId>shiro-core</artifactId>
                <version>${shiro.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.shiro</groupId>
                <artifactId>shiro-spring</artifactId>
                <version>${shiro.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.shiro</groupId>
                <artifactId>shiro-web</artifactId>
                <version>${shiro.version}</version>
            </dependency>

            <!-- redis -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-data-redis</artifactId>
                <version>${redis.version}</version>
            </dependency>
            <dependency>
                <groupId>redis.clients</groupId>
                <artifactId>jedis</artifactId>
                <version>${jedis.version}</version>
            </dependency>

            <!-- nekohtml -->
            <dependency>
                <groupId>net.sourceforge.nekohtml</groupId>
                <artifactId>nekohtml</artifactId>
                <version>${nekohtml.version}</version>
            </dependency>

            <!-- kaptcha -->
            <dependency>
                <groupId>com.github.penggle</groupId>
                <artifactId>kaptcha</artifactId>
                <version>${kaptcha.version}</version>
            </dependency>

            <!-- lombok -->
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
            </dependency>

            <!-- commons -->
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>${commons-lang3.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-codec</groupId>
                <artifactId>commons-codec</artifactId>
                <version>${commons.codec.version}</version>
            </dependency>

            <!-- fastjson -->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>fastjson</artifactId>
                <version>${fastjson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-databind</artifactId>
                <version>${jackson.version}</version>
            </dependency>

            <!-- httpclient -->
            <dependency>
                <groupId>org.apache.httpcomponents</groupId>
                <artifactId>httpclient</artifactId>
                <version>${httpclient.version}</version>
            </dependency>

            <!-- servlet -->
            <dependency>
                <groupId>javax.servlet</groupId>
                <artifactId>javax.servlet-api</artifactId>
                <version>${javax.servlet-api.version}</version>
            </dependency>

            <dependency>
                <groupId>io.swagger</groupId>
                <artifactId>swagger-annotations</artifactId>
                <version>${swagger-annotations.version}</version>
            </dependency>

            <!-- spring cloud -->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter-eureka</artifactId>
                <version>${eureka.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter-feign</artifactId>
                <version>${feign.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>com.netflix.feign</groupId>
                <artifactId>feign-httpclient</artifactId>
                <version>${feign-httpclient.version}</version>
            </dependency>
            <dependency>
                <groupId>com.netflix.feign</groupId>
                <artifactId>feign-jackson</artifactId>
                <version>${feign-jackson.version}</version>
            </dependency>

        </dependencies>
    </dependencyManagement>

    <!--该插件作用是打一个可运行的包，必须要写在需要打包的项目里。这里的父模块不需要打包运行，所以删掉该插件。
    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>-->


</project>
